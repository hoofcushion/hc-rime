schema:
 dependencies: # 加载本方案前自动加载的其他方案
  - module_custom_phrase
  - module_custom_symbol
engine:
 processors:
  - ascii_composer
  - lua_processor@quick_start_p@quick_start
  - lua_processor@option_swither_p@option_swither
  - recognizer
  - key_binder
  - speller
  - lua_processor@smart_punct
  - punctuator
  - lua_processor@plain_return
  - selector
  - navigator
  - express_editor
  - lua_processor@recorder
  - lua_processor@init
 segmentors:
  - ascii_segmentor
  - matcher
  - abc_segmentor
  - punct_segmentor
  - fallback_segmentor
 translators:
  - punct_translator
  - lua_translator@quick_start_t@quick_start
  - lua_translator@option_swither_t@option_swither
  - lua_translator@execute # 计算器
  - lua_translator@chinese_number
  - lua_translator@unicode
  - lua_translator@save_entry
  - lua_translator@custom_time
  - lua_translator@custom_symbol # 自定义符号
  - table_translator@custom_phrase # 自定义短语
 filters:
  - simplifier@fil_s2t
  - simplifier@fil_emoji
  - simplifier@fil_users
  - simplifier@fil_symbol
  - simplifier@fil_zhuyin
  - simplifier@fil_huoxin
  - simplifier@fil_trans
  - lua_filter@fil_Uniquifier
  - lua_filter@fil_KijinSeija
  - lua_filter@fil_Unicode
custom_phrase:
 initial_quality: 64
 dictionary: custom_phrase
 enable_user_dict: false
 enable_completion: false
 enable_sentence: false
custom_symbol:
 initial_quality: 64
 dictionary: custom_symbol
 enable_user_dict: true
 tag: custom_symbol
fil_s2t:
 option_name: fil_s2t
 opencc_config: s2t.json
 tips: all
 tags: [abc]
fil_emoji:
 option_name: fil_emoji
 opencc_config: emoji.json
 tips: all
 tags: [abc]
fil_users:
 option_name: fil_emoji
 opencc_config: users.json
 tips: all
 tags: [abc]
fil_symbol:
 option_name: fil_symbol
 opencc_config: sym.json
 tips: all
 tags: [abc]
fil_zhuyin:
 option_name: fil_zhuyin
 opencc_config: pinyin.json
 tips: char
 tags: [abc]
 show_in_comment: true
 comment_format: [xform/&nbsp/｜/]
fil_trans:
 option_name: fil_trans
 opencc_config: dic_4w_en.json
 tips: all
 tags: [ts_en]
fil_huoxin:
 option_name: fil_huoxin
 opencc_config: huoxing.json
 tips: all
 tags: [abc]
fil_KijinSeija: {option_name: fil_KijinSeija}
fil_Unicode: {option_name: fil_Unicode}
#stcs: {option_name: fil_s2t, opencc_config: s2t.json}
speller:
 delimiter: " '"
punctuator:
 full_shape:
  " ": {"commit": "　"}
  ",": {"commit": "，"}
  ".": {"commit": "。"}
  "<": ["《", "〈", "«", "‹"]
  ">": ["》", "〉", "»", "›"]
  "/": ["／", "÷"]
  "?": {"commit": "？"}
  ";": {"commit": "；"}
  ":": {"commit": "："}
  "'": {"pair": ["‘", "’"]}
  '"': {"pair": ["“", "”"]}
  '\': ["、", "＼"]
  "|": ["·", "｜", "§", "¦"]
  "`": "｀"
  "~": "～"
  "!": {"commit": "！"}
  "@": ["＠", "☯"]
  "# ": ["＃", "⌘"]
  "%": ["％", "°", "℃"]
  "$": ["￥", "$", "€", "£", "¥", "¢", "¤"]
  "^": {"commit": "……"}
  "&": "＆"
  "*": ["＊", "·", "・", "×", "※", "❂"]
  "(": "（"
  ")": "）"
  "-": "－"
  "_": "——"
  "+": "＋"
  "=": "＝"
  "[": ["「", "【", "〔", "［"]
  "]": ["」", "】", "〕", "］"]
  "{": ["『", "〖", "｛"]
  "}": ["』", "〗", "｝"]
 half_shape:
  ",": "，"
  ".": "。"
  "<": "《"
  ">": "》"
  "/": "/"
  "?": "？"
  ";": "；"
  ":": "："
  "'": {"pair": ["‘", "’"]}
  '"': {"pair": ["“", "”"]}
  '\': "、"
  "|": "|"
  "`": "`"
  "~": "~"
  "!": "！"
  "@": "@"
  "# ": "# "
  "%": "%"
  "$": "¥"
  "^": "……"
  "&": "&"
  "*": "*"
  "(": "（"
  ")": "）"
  "-": "-"
  "_": "——"
  "+": "+"
  "=": "="
  "[": "【"
  "]": "】"
  "{": "「"
  "}": "」"
recognizer:
 lua:
  execute: "//" #计算器
  quick_start: "/" #快速启动
  unicode: "U" #Unicode
  chinese_number: "/J" #汉字数字+金额 整数支持最高52位
  custom_symbol: '\' #符号
  option_swither: "/O" #切换选项
 patterns: #pattern 中单个 \ 要用 \\\\ 双重转义来表示
  execute: "^//.*" #计算器
  quick_start: "^/(?!/).*" #快速启动
  unicode: "^U(?:[HDOB]?[a-f0-9]*|[a-f0-9]*[HDOB]?)$" #Unicode
  chinese_number: "^/J.*" #汉字数字+金额 整数支持最高52位
  custom_symbol: '^\\(?:10?|[0-9]|[A-Za-z]+)?' #符号
  option_swither: "/O.*" #切换选项
ascii_composer:
 good_old_caps_lock: true
 switch_key:
  Shift_L: inline_ascii
  #Shift_R:    commit_text
  #Control_L:  noop
  #Control_R:  noop
  Caps_Lock: clear
  Eisu_toggle: clear
key_binder:
 bindings:
  # Editing, Inspire by Vim.
  - {accept: "Control+n", send: Down, when: composing}
  - {accept: "Control+p", send: Up, when: composing}
  - {accept: "Control+j", send: Page_Down, when: composing}
  - {accept: "Control+k", send: Page_Up, when: composing}
  - {accept: "Control+b", send: Left, when: composing}
  - {accept: "Control+f", send: Right, when: composing}
  - {accept: "Control+o", send: Control+Left, when: composing}
  - {accept: "Control+i", send: Control+Right, when: composing}
  - {accept: "ISO_Left_Tab", send: Control+Left, when: composing}
  - {accept: "Shift+Tab", send: Control+Left, when: composing}
  - {accept: "Tab", send: Control+Right, when: composing}
  - {accept: "Control+h", send: BackSpace, when: composing}
  - {accept: "Control+l", send: Delete, when: composing}
  - {accept: "Control+w", send: Control+BackSpace, when: composing}
  - {accept: "Control+d", send: Control+Delete, when: composing}
  - {accept: "Control+y", send: Space, when: has_menu}
  - {accept: "Control+m", send: Enter, when: composing}
  - {accept: "Control+e", send: Escape, when: composing}
  - {accept: "Control+u", send: Escape, when: composing}
  - {accept: "Control+c", send: Escape, when: composing}
  - {accept: "Control+[", send: Escape, when: composing}
  - {accept: "KP_1", send: 1, when: composing}
  - {accept: "KP_2", send: 2, when: composing}
  - {accept: "KP_3", send: 3, when: composing}
  - {accept: "KP_4", send: 4, when: composing}
  - {accept: "KP_5", send: 5, when: composing}
  - {accept: "KP_6", send: 6, when: composing}
  - {accept: "KP_7", send: 7, when: composing}
  - {accept: "KP_8", send: 8, when: composing}
  - {accept: "KP_9", send: 9, when: composing}
  - {accept: "KP_0", send: 0, when: composing}
  - {accept: "KP_Multiply", send: asterisk, when: composing}
  - {accept: "KP_Add", send: plus, when: composing}
  - {accept: "KP_Subtract", send: minus, when: composing}
  - {accept: "KP_Divide", send: slash, when: composing}
  - {accept: "KP_Decimal", send: period, when: composing}
  - {accept: "Control+comma", toggle: ascii_punct, when: always}
  - {accept: "Control+period", toggle: full_shape, when: always}
  - {accept: "Control+KP_0", select: .next, when: always}
