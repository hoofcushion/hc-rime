return {
 ascii_composer={
  good_old_caps_lock=true,
  switch_key={
   Caps_Lock="clear",
   Eisu_toggle="clear",
   Shift_L="inline_ascii",
  },
 },
 chinese_number={
  initial_quality=64,
  prefix="/J",
  tag="chinese_number",
 },
 custom_phrase={
  dictionary="custom_phrase",
  enable_completion=false,
  enable_sentence=false,
  enable_user_dict=false,
  initial_quality=64,
 },
 custom_symbol={
  dictionary="custom_symbol",
  initial_quality=64,
  prefix="\\",
  tag="custom_symbol",
 },
 custom_word={
  delimiter="|",
  initial_quality=1000000,
  suffix="-=",
  user_dict="custom_word",
 },
 engine={
  filters={
   "simplifier@fil_s2t",
   "simplifier@fil_emoji",
   "simplifier@fil_users",
   "simplifier@fil_symbol",
   "simplifier@fil_zhuyin",
   "simplifier@fil_huoxin",
   "simplifier@fil_trans",
   "lua_filter@*cand-continuous-len*filter@6",
   "lua_filter@*cand-limit*filter@100",
   "lua_filter@*uniquifier*filter",
   "lua_filter@*cand-details*filter",
   "lua_filter@*cand-reverse*filter@fil_KijinSeija",
   "lua_filter@*cand-unicode*filter@fil_Unicode",
   "lua_filter@*shape-filter*filter",
  },
  processors={
   "ascii_composer",
   "recognizer",
   "key_binder",
   "lua_processor@*keymap*processor",
   "lua_processor@*quick_warp*processor",
   "lua_processor@*shape-filter*processor",
   "speller",
   "punctuator",
   "selector",
   "navigator",
   "express_editor",
   "lua_processor@*commit-recorder*processor@recorder",
  },
  segmentors={
   "ascii_segmentor",
   "matcher",
   "abc_segmentor",
   "punct_segmentor",
   "fallback_segmentor",
  },
  translators={
   "punct_translator",
   "lua_translator@*execute*translator@execute",
   "lua_translator@*chinese_number*translator@chinese_number",
   "lua_translator@*unicode*translator@unicode",
   "lua_translator@*custom_word*translator@custom_word",
   "lua_translator@*custom_time*translator@custom_time",
   "lua_translator@*custom_symbol*translator@custom_symbol",
   "table_translator@custom_phrase",
  },
 },
 execute={
  initial_quality=64,
  prefix="//",
  tag="execute",
 },
 fil_KijinSeija={
  option_name="fil_KijinSeija",
 },
 fil_Unicode={
  option_name="fil_Unicode",
 },
 fil_emoji={
  opencc_config="emoji.json",
  option_name="fil_emoji",
  tags={"abc"},
  tips="all",
 },
 fil_for_all={
  tags={"abc"},
  tips="all",
 },
 fil_huoxin={
  opencc_config="huoxing.json",
  option_name="fil_huoxin",
  tags={"abc"},
  tips="all",
 },
 fil_s2t={
  opencc_config="s2t.json",
  option_name="fil_s2t",
  tags={"abc"},
  tips="all",
 },
 fil_symbol={
  opencc_config="sym.json",
  option_name="fil_symbol",
  tags={"abc"},
  tips="all",
 },
 fil_trans={
  opencc_config="dic_4w_en.json",
  option_name="fil_trans",
  tags={"ts_en"},
  tips="all",
 },
 fil_users={
  opencc_config="users.json",
  option_name="fil_emoji",
  tags={"abc"},
  tips="all",
 },
 fil_zhuyin={
  comment_format={"xform/&nbsp/ï½œ/"},
  opencc_config="pinyin.json",
  option_name="fil_zhuyin",
  show_in_comment=true,
  tags={"abc"},
  tips="all",
 },
 key_binder={
  bindings={
   {accept="Control+n",send="Down",when="composing"},
   {accept="Control+p",send="Up",when="composing"},
   {accept="Control+j",send="Page_Down",when="composing"},
   {accept="Control+k",send="Page_Up",when="composing"},
   {accept="Control+b",send="Left",when="composing"},
   {accept="Control+f",send="Right",when="composing"},
   {accept="Control+o",send="Control+Left",when="composing"},
   {accept="Control+i",send="Control+Right",when="composing"},
   {accept="Shift+Tab",send="Control+Left",when="composing"},
   {accept="Control+h",send="BackSpace",when="composing"},
   {accept="Control+l",send="Delete",when="composing"},
   {accept="Control+w",send="Control+BackSpace",when="composing"},
   {accept="Control+d",send="Control+Delete",when="composing"},
   {accept="Control+y",send="space",when="has_menu"},
   {accept="Control+bracketleft",send="Escape",when="composing"},
   {accept="Control+c",send="Escape",when="composing"},
   {accept="KP_1",send=1,when="composing"},
   {accept="KP_2",send=2,when="composing"},
   {accept="KP_3",send=3,when="composing"},
   {accept="KP_4",send=4,when="composing"},
   {accept="KP_5",send=5,when="composing"},
   {accept="KP_6",send=6,when="composing"},
   {accept="KP_7",send=7,when="composing"},
   {accept="KP_8",send=8,when="composing"},
   {accept="KP_9",send=9,when="composing"},
   {accept="KP_0",send=0,when="composing"},
   {accept="KP_Multiply",send="asterisk",when="composing"},
   {accept="KP_Add",send="plus",when="composing"},
   {accept="KP_Subtract",send="minus",when="composing"},
   {accept="KP_Divide",send="slash",when="composing"},
   {accept="KP_Decimal",send="period",when="composing"},
   {accept="Control+comma",toggle="ascii_punct",when="always"},
   {accept="Control+period",toggle="full_shape",when="always"},
   {accept="Control+KP_0",select=".next",when="always"},
  },
 },
 predictor={
  db="predict.db",
  max_candidates=10,
  max_iterations=1,
 },
 punctuator={
  import_preset="default",
 },
 recognizer={
  import_preset="default",
  patterns={
   chinese_number="^/J.*",
   custom_symbol="^\\\\(?:10?|[0-9]|[A-Za-z]+)?",
   execute="^//.*",
   unicode="^U(?:[HDOB]?[a-f0-9]*|[a-f0-9]*[HDOB]?)$",
  },
 },
 schema={
  dependencies={
   "custom_phrase",
   "custom_symbol",
  },
 },
 speller={
  delimiter=" '",
 },
 unicode={
  initial_quality=64,
  prefix="U",
  tag="unicode",
 },
}
